"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7074],{9673:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"explore/why-not/blockchain","title":"Blockchain","description":"Why not Blockchain?","source":"@site/docs/01-explore/04-why-not/01-blockchain.mdx","sourceDirName":"01-explore/04-why-not","slug":"/explore/why-not/blockchain","permalink":"/explore/why-not/blockchain","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/01-explore/04-why-not/01-blockchain.mdx","tags":[],"version":"current","lastUpdatedAt":1733218267000,"sidebarPosition":1,"frontMatter":{"id":"blockchain","title":"Blockchain"},"sidebar":"tutorialSidebar","previous":{"title":"The Data Sovereignty Manifesto","permalink":"/explore/manifesto"},"next":{"title":"IPFS","permalink":"/explore/why-not/ipfs"}}');var i=n(6070),a=n(5658);const r={id:"blockchain",title:"Blockchain"},c=void 0,s={},l=[{value:"Why not Blockchain?",id:"why-not-blockchain",level:2},{value:"Calimero vs Blockchain",id:"calimero-vs-blockchain",level:2}];function h(e){const t={h2:"h2",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"why-not-blockchain",children:"Why not Blockchain?"}),"\n",(0,i.jsx)(t.p,{children:"By virtue of blockchain principles, there's a couple of issues that arise. The\nmajor one being that everyone has to agree on the state of the canonical chain,\nand therefore there can be only one network actor at any given time. Different\nchains implement different strategies for electing this actor to alleviate the\nrisk of compromise, but the fundamental issue remains, and hence, the\nlong-standing problem of scalability."}),"\n",(0,i.jsx)(t.h2,{id:"calimero-vs-blockchain",children:"Calimero vs Blockchain"}),"\n",(0,i.jsx)(t.p,{children:"Calimero fundamentally rethinks the problem and offers an alternative approach,\nlocal-first execution with eventual consistency. This means that each actor can\nindependently drive their own local state, and the network will eventually\nreconcile to the same state. Essentially pegging the scalability threshold to\nthe number of actors in the network, and executions are practically\ninstantaneous."}),"\n",(0,i.jsx)(t.p,{children:"State reconciliation is context-aware, meaning that all activity revolves around\nan instance of an app. This means that participants of a context only have to\nsynchronize with each other, and not the entire network. This is in stark\ncontrast to blockchains, where everyone is forced to synchronize with everyone\nelse and this competition is reflected in gas fees. Calimero doesn't have gas\nfees, and the cost of execution is directly borne by the actor."}),"\n",(0,i.jsx)(t.p,{children:"Blockchains achieve integrity through transparency, which is a double-edged\nsword, essentially precluding you from using it in private environments.\nCalimero however, leverages the direct-actor relationship to encrypt all network\ntraffic between them, and therefore, the network is inherently private."}),"\n",(0,i.jsx)(t.p,{children:"Calimero is also designed to be embeddable, meaning that client apps themselves\nbecome the network actors, and the network is the app itself. This is in stark\ncontrast to blockchains, where the network is a separate entity from the client\napps."})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},5658:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(758);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);