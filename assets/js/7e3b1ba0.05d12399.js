"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[706],{16782:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"developer-tools/merobox/docker-image-management","title":"Docker Image Management","description":"Managing Docker images, containers, and multi-architecture support for Merobox.","source":"@site/docs/05-developer-tools/merobox/docker-image-management.mdx","sourceDirName":"05-developer-tools/merobox","slug":"/developer-tools/merobox/docker-image-management","permalink":"/developer-tools/merobox/docker-image-management","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/05-developer-tools/merobox/docker-image-management.mdx","tags":[],"version":"current","lastUpdatedAt":1757931844000,"sidebarPosition":7.2,"frontMatter":{"title":"Docker Image Management","description":"Managing Docker images, containers, and multi-architecture support for Merobox.","sidebar_position":7.2},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables","permalink":"/developer-tools/merobox/environment-variables"},"next":{"title":"Network Configuration","permalink":"/developer-tools/merobox/network-configuration"}}');var a=i(86070),o=i(48854);const l={title:"Docker Image Management",description:"Managing Docker images, containers, and multi-architecture support for Merobox.",sidebar_position:7.2},s="Docker Image Management",t={},c=[{value:"Custom Image Configuration",id:"custom-image-configuration",level:2},{value:"Image Selection Strategies",id:"image-selection-strategies",level:3},{value:"Multi-Image Workflows",id:"multi-image-workflows",level:3},{value:"Image Pull Strategies",id:"image-pull-strategies",level:2},{value:"Pull Policies",id:"pull-policies",level:3},{value:"Pull Configuration Options",id:"pull-configuration-options",level:3},{value:"Registry Authentication",id:"registry-authentication",level:3},{value:"Multi-Architecture Support",id:"multi-architecture-support",level:2},{value:"Platform-Specific Images",id:"platform-specific-images",level:3},{value:"Multi-Platform Workflows",id:"multi-platform-workflows",level:3},{value:"Architecture Detection",id:"architecture-detection",level:3},{value:"Image Building and Customization",id:"image-building-and-customization",level:2},{value:"Custom Image Building",id:"custom-image-building",level:3},{value:"Build Configuration",id:"build-configuration",level:3},{value:"Image Optimization",id:"image-optimization",level:3},{value:"Image Caching and Performance",id:"image-caching-and-performance",level:2},{value:"Build Cache Configuration",id:"build-cache-configuration",level:3},{value:"Image Layer Optimization",id:"image-layer-optimization",level:3},{value:"Image Security",id:"image-security",level:2},{value:"Security Scanning",id:"security-scanning",level:3},{value:"Image Signing",id:"image-signing",level:3},{value:"Base Image Security",id:"base-image-security",level:3},{value:"Image Monitoring and Maintenance",id:"image-monitoring-and-maintenance",level:2},{value:"Image Health Checks",id:"image-health-checks",level:3},{value:"Image Updates",id:"image-updates",level:3},{value:"Image Cleanup",id:"image-cleanup",level:3},{value:"Troubleshooting Image Issues",id:"troubleshooting-image-issues",level:2},{value:"Common Problems",id:"common-problems",level:3},{value:"Debug Image Pull Issues",id:"debug-image-pull-issues",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Image Selection",id:"image-selection",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Next Steps",id:"next-steps",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"docker-image-management",children:"Docker Image Management"})}),"\n",(0,a.jsx)(n.p,{children:"This guide covers advanced Docker image management, including custom image\nconfiguration, pull strategies, and multi-architecture support for Merobox."}),"\n",(0,a.jsx)(n.h2,{id:"custom-image-configuration",children:"Custom Image Configuration"}),"\n",(0,a.jsx)(n.p,{children:"Configure custom Docker images for different scenarios:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# workflow.yml\nnodes:\n  image: ghcr.io/calimero-network/merod:latest\n  auth_image: ghcr.io/calimero-network/mero-auth:latest\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-selection-strategies",children:"Image Selection Strategies"}),"\n",(0,a.jsx)(n.p,{children:"Choose the right image for your use case:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Production - stable release\nnodes:\n  image: ghcr.io/calimero-network/merod:latest\n\n# Development - edge features\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n\n# Specific version\nnodes:\n  image: ghcr.io/calimero-network/merod:v0.7.0\n\n# Custom build\nnodes:\n  image: my-registry.com/calimero:custom\n"})}),"\n",(0,a.jsx)(n.h3,{id:"multi-image-workflows",children:"Multi-Image Workflows"}),"\n",(0,a.jsx)(n.p,{children:"Use different images for different nodes:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# workflow.yml\nnodes:\n  - name: calimero-node-1\n    image: ghcr.io/calimero-network/merod:latest\n  - name: calimero-node-2\n    image: ghcr.io/calimero-network/merod:edge\n  - name: calimero-node-3\n    image: my-registry.com/calimero:custom\n"})}),"\n",(0,a.jsx)(n.h2,{id:"image-pull-strategies",children:"Image Pull Strategies"}),"\n",(0,a.jsx)(n.p,{children:"Control how Merobox handles Docker images:"}),"\n",(0,a.jsx)(n.h3,{id:"pull-policies",children:"Pull Policies"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Always pull latest images\nforce_pull_image: true\n\n# Custom pull behavior per node\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n  pull_policy: always # always, if-not-present, never\n"})}),"\n",(0,a.jsx)(n.h3,{id:"pull-configuration-options",children:"Pull Configuration Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Global pull settings\nimage_pull_policy: if-not-present\nimage_pull_timeout: 300\nimage_pull_retries: 3\n\n# Per-node pull settings\nnodes:\n  - name: calimero-node-1\n    image: ghcr.io/calimero-network/merod:latest\n    pull_policy: always\n    pull_timeout: 600\n  - name: calimero-node-2\n    image: ghcr.io/calimero-network/merod:edge\n    pull_policy: if-not-present\n"})}),"\n",(0,a.jsx)(n.h3,{id:"registry-authentication",children:"Registry Authentication"}),"\n",(0,a.jsx)(n.p,{children:"Configure authentication for private registries:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Registry credentials\nregistries:\n  - name: ghcr.io\n    username: ${GITHUB_USERNAME}\n    password: ${GITHUB_TOKEN}\n  - name: my-registry.com\n    username: ${REGISTRY_USERNAME}\n    password: ${REGISTRY_PASSWORD}\n\n# Use authenticated registry\nnodes:\n  image: my-registry.com/calimero:private\n  registry: my-registry.com\n"})}),"\n",(0,a.jsx)(n.h2,{id:"multi-architecture-support",children:"Multi-Architecture Support"}),"\n",(0,a.jsx)(n.p,{children:"Use different images for different architectures:"}),"\n",(0,a.jsx)(n.h3,{id:"platform-specific-images",children:"Platform-Specific Images"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  image: ghcr.io/calimero-network/merod:edge\n  platform: linux/amd64 # linux/arm64, linux/arm/v7\n"})}),"\n",(0,a.jsx)(n.h3,{id:"multi-platform-workflows",children:"Multi-Platform Workflows"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Different platforms for different nodes\nnodes:\n  - name: calimero-node-amd64\n    image: ghcr.io/calimero-network/merod:edge\n    platform: linux/amd64\n  - name: calimero-node-arm64\n    image: ghcr.io/calimero-network/merod:edge\n    platform: linux/arm64\n"})}),"\n",(0,a.jsx)(n.h3,{id:"architecture-detection",children:"Architecture Detection"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'# Auto-detect platform\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n  platform: auto # Automatically detect host architecture\n\n# Conditional platform selection\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n  platform: "{{platform}}" # Use dynamic platform variable\n'})}),"\n",(0,a.jsx)(n.h2,{id:"image-building-and-customization",children:"Image Building and Customization"}),"\n",(0,a.jsx)(n.h3,{id:"custom-image-building",children:"Custom Image Building"}),"\n",(0,a.jsx)(n.p,{children:"Build custom images with your modifications:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",children:"# Dockerfile.custom\nFROM ghcr.io/calimero-network/merod:edge\n\n# Add custom configurations\nCOPY custom-config.yml /calimero/config/\nCOPY custom-plugins/ /calimero/plugins/\n\n# Set custom environment\nENV CALIMERO_CUSTOM_MODE=true\nENV CALIMERO_PLUGINS_PATH=/calimero/plugins\n\n# Expose additional ports\nEXPOSE 3000 3001\n"})}),"\n",(0,a.jsx)(n.h3,{id:"build-configuration",children:"Build Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# workflow.yml\nbuild:\n  context: .\n  dockerfile: Dockerfile.custom\n  tags:\n    - my-registry.com/calimero:custom\n    - my-registry.com/calimero:latest\n  args:\n    - BUILD_DATE={{now}}\n    - VERSION={{version}}\n  platforms:\n    - linux/amd64\n    - linux/arm64\n\nnodes:\n  image: my-registry.com/calimero:custom\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-optimization",children:"Image Optimization"}),"\n",(0,a.jsx)(n.p,{children:"Optimize images for production:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",children:"# Multi-stage build for optimization\nFROM ghcr.io/calimero-network/merod:edge as base\n\n# Development stage\nFROM base as dev\nRUN apt-get update && apt-get install -y \\\n    curl \\\n    vim \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Production stage\nFROM base as prod\nRUN apt-get update && apt-get install -y \\\n    ca-certificates \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean\n\n# Use production stage\nFROM prod\n"})}),"\n",(0,a.jsx)(n.h2,{id:"image-caching-and-performance",children:"Image Caching and Performance"}),"\n",(0,a.jsx)(n.h3,{id:"build-cache-configuration",children:"Build Cache Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Enable build cache\nbuild:\n  cache: true\n  cache_from:\n    - ghcr.io/calimero-network/merod:edge\n    - my-registry.com/calimero:cache\n  cache_to:\n    - my-registry.com/calimero:cache\n\n# Cache configuration\ncache:\n  enabled: true\n  ttl: 3600 # 1 hour\n  max_size: 10GB\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-layer-optimization",children:"Image Layer Optimization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dockerfile",children:"# Optimize layer caching\nFROM ghcr.io/calimero-network/merod:edge\n\n# Copy package files first (changes less frequently)\nCOPY package.json package-lock.json ./\nRUN npm ci --only=production\n\n# Copy source code last (changes more frequently)\nCOPY src/ ./src/\nCOPY config/ ./config/\n"})}),"\n",(0,a.jsx)(n.h2,{id:"image-security",children:"Image Security"}),"\n",(0,a.jsx)(n.h3,{id:"security-scanning",children:"Security Scanning"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Enable security scanning\nsecurity:\n  scan_images: true\n  scan_policy: strict\n  vulnerabilities:\n    - high\n    - critical\n  ignore:\n    - CVE-2023-1234 # Known false positive\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-signing",children:"Image Signing"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Sign images for security\nsigning:\n  enabled: true\n  key: ${SIGNING_KEY}\n  passphrase: ${SIGNING_PASSPHRASE}\n  registry: my-registry.com\n"})}),"\n",(0,a.jsx)(n.h3,{id:"base-image-security",children:"Base Image Security"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Use minimal base images\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n  security:\n    user: 1000:1000 # Non-root user\n    read_only: true\n    no_new_privileges: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"image-monitoring-and-maintenance",children:"Image Monitoring and Maintenance"}),"\n",(0,a.jsx)(n.h3,{id:"image-health-checks",children:"Image Health Checks"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Health check configuration\nnodes:\n  image: ghcr.io/calimero-network/merod:edge\n  healthcheck:\n    test: ['CMD', 'curl', '-f', 'http://localhost:2428/health']\n    interval: 30s\n    timeout: 10s\n    retries: 3\n    start_period: 40s\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-updates",children:"Image Updates"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Automatic image updates\nupdates:\n  enabled: true\n  schedule: '0 2 * * *' # Daily at 2 AM\n  strategy: rolling\n  max_unavailable: 1\n  max_surge: 1\n"})}),"\n",(0,a.jsx)(n.h3,{id:"image-cleanup",children:"Image Cleanup"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# Cleanup old images\ncleanup:\n  enabled: true\n  keep_last: 5\n  older_than: 7d\n  untagged: true\n"})}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting-image-issues",children:"Troubleshooting Image Issues"}),"\n",(0,a.jsx)(n.h3,{id:"common-problems",children:"Common Problems"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check image availability\ndocker pull ghcr.io/calimero-network/merod:edge\n\n# Inspect image details\ndocker inspect ghcr.io/calimero-network/merod:edge\n\n# Check image layers\ndocker history ghcr.io/calimero-network/merod:edge\n\n# Test image locally\ndocker run --rm ghcr.io/calimero-network/merod:edge --version\n"})}),"\n",(0,a.jsx)(n.h3,{id:"debug-image-pull-issues",children:"Debug Image Pull Issues"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Enable debug logging\nexport DOCKER_BUILDKIT=0\nexport DOCKER_CLI_EXPERIMENTAL=enabled\n\n# Check registry connectivity\ndocker login ghcr.io\ndocker pull ghcr.io/calimero-network/merod:edge\n\n# Verify image integrity\ndocker run --rm ghcr.io/calimero-network/merod:edge sh -c \"echo 'Image is working'\"\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"image-selection",children:"Image Selection"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Use specific tags"}),": Avoid ",(0,a.jsx)(n.code,{children:"latest"})," in production"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Regular updates"}),": Keep images up to date with security patches"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Minimal images"}),": Use minimal base images when possible"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Version pinning"}),": Pin to specific versions for reproducibility"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Layer caching"}),": Optimize Dockerfile for better layer caching"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Multi-stage builds"}),": Use multi-stage builds to reduce image size"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Registry mirrors"}),": Use local registry mirrors for faster pulls"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Image compression"}),": Compress images for storage efficiency"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Vulnerability scanning"}),": Regularly scan images for vulnerabilities"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Image signing"}),": Sign images to ensure authenticity"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Access control"}),": Control access to image registries"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Regular updates"}),": Keep base images updated"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"Now that you understand Docker image management:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./network-configuration",children:"Network Configuration"})," - Advanced network setup"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./auth-service-integration",children:"Authentication Service Integration"})," - Auth\nservice configuration"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./resource-management",children:"Resource Management"})," - Resource limits and monitoring"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"./advanced-configuration",children:"Advanced Configuration"})," - Other advanced features"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},48854:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var r=i(30758);const a={},o=r.createContext(a);function l(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);