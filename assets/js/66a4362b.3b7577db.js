"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2871],{68820:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>l});var i=t(30758);const a={},o=i.createContext(a);function c(n){const e=i.useContext(o);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:c(n.components),i.createElement(o.Provider,{value:e},n.children)}},72146:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"tutorials/python-client-integration","title":"Python Client Integration","description":"Complete tutorial on integrating the Calimero Python client SDK into your applications, from basic setup to advanced patterns.","source":"@site/docs/06-tutorials/08-python-client-integration.mdx","sourceDirName":"06-tutorials","slug":"/tutorials/python-client-integration","permalink":"/tutorials/python-client-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/06-tutorials/08-python-client-integration.mdx","tags":[],"version":"current","lastUpdatedAt":1759836146000,"sidebarPosition":8,"frontMatter":{"title":"Python Client Integration","description":"Complete tutorial on integrating the Calimero Python client SDK into your applications, from basic setup to advanced patterns.","sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Blockchain interaction with Proxy Contract","permalink":"/tutorials/proxy-contract-interaction"},"next":{"title":"The Data Sovereignty Manifesto","permalink":"/resources/manifesto"}}');var a=t(86070),o=t(68820);const c={title:"Python Client Integration",description:"Complete tutorial on integrating the Calimero Python client SDK into your applications, from basic setup to advanced patterns.",sidebar_position:8},l="Python Client Integration",r={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Installation and Setup",id:"step-1-installation-and-setup",level:2},{value:"Install the Python Client",id:"install-the-python-client",level:3},{value:"Verify Installation",id:"verify-installation",level:3},{value:"Step 2: Basic Connection and Operations",id:"step-2-basic-connection-and-operations",level:2},{value:"Create a Connection",id:"create-a-connection",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Step 3: Application Management",id:"step-3-application-management",level:2},{value:"Install and Manage Applications",id:"install-and-manage-applications",level:3},{value:"Development Application Installation",id:"development-application-installation",level:3},{value:"Step 4: Context Management",id:"step-4-context-management",level:2},{value:"Create and Manage Contexts",id:"create-and-manage-contexts",level:3},{value:"Step 5: Function Execution",id:"step-5-function-execution",level:2},{value:"Execute Smart Contract Functions",id:"execute-smart-contract-functions",level:3},{value:"Step 6: Best Practices",id:"step-6-best-practices",level:2},{value:"Connection Management",id:"connection-management",level:3},{value:"Error Handling Patterns",id:"error-handling-patterns",level:3},{value:"Step 7: Testing",id:"step-7-testing",level:2},{value:"Basic Testing",id:"basic-testing",level:3},{value:"Integration Testing",id:"integration-testing",level:3},{value:"Resources",id:"resources",level:2}];function p(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"python-client-integration",children:"Python Client Integration"})}),"\n",(0,a.jsx)(e.p,{children:"This tutorial walks you through integrating the Calimero Python client SDK into\nyour applications, from basic setup to advanced patterns and real-world use\ncases."}),"\n",(0,a.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(e.p,{children:"Before starting this tutorial, ensure you have:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Python 3.9+"})," installed"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"pipx"})," package manager (recommended) or ",(0,a.jsx)(e.strong,{children:"pip"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Basic Python knowledge"})," (error handling, function calls)"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Calimero node"})," running locally or remotely"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Basic understanding"})," of Calimero concepts (contexts, applications,\nfunctions)"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"step-1-installation-and-setup",children:"Step 1: Installation and Setup"}),"\n",(0,a.jsx)(e.h3,{id:"install-the-python-client",children:"Install the Python Client"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"pipx install calimero-client-py\npipx ensurepath\n"})}),"\n",(0,a.jsx)(e.h3,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# test_installation.py\nimport calimero\n\ndef test_installation():\n    """Test that the Python client is properly installed."""\n    try:\n        connection = calimero.create_connection("http://localhost:2428")\n        client = calimero.create_client(connection)\n        print("\u2713 Python client installed successfully!")\n        return True\n    except Exception as e:\n        print(f"\u2717 Installation test failed: {e}")\n        return False\n\nif __name__ == "__main__":\n    test_installation()\n'})}),"\n",(0,a.jsx)(e.p,{children:"Run the test:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"python test_installation.py\n"})}),"\n",(0,a.jsx)(e.h2,{id:"step-2-basic-connection-and-operations",children:"Step 2: Basic Connection and Operations"}),"\n",(0,a.jsx)(e.h3,{id:"create-a-connection",children:"Create a Connection"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# basic_connection.py\nimport calimero\n\ndef basic_connection_example():\n    """Basic connection and operation example."""\n    # Create connection\n    connection = calimero.create_connection(\n        api_url="http://localhost:2428",\n        node_name="example-node"\n    )\n\n    # Create client\n    client = calimero.create_client(connection)\n\n    # Test basic operations\n    print("Testing basic operations...")\n\n    # Get peers count\n    peers_count = client.get_peers_count()\n    print(f"Connected peers: {peers_count}")\n\n    # List contexts\n    contexts = client.list_contexts()\n    print(f"Found {len(contexts)} contexts")\n\n    # List applications\n    apps = client.list_applications()\n    print(f"Found {len(apps)} applications")\n\n    return client\n\nif __name__ == "__main__":\n    basic_connection_example()\n'})}),"\n",(0,a.jsx)(e.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# error_handling.py\nimport calimero\n\ndef error_handling_example():\n    """Example of proper error handling."""\n    try:\n        connection = calimero.create_connection("http://localhost:2428")\n        client = calimero.create_client(connection)\n\n        # This might fail if the context doesn\'t exist\n        context = client.get_context("non-existent-context")\n        print(f"Context: {context}")\n\n    except RuntimeError as e:\n        print(f"Client error: {e}")\n    except Exception as e:\n        print(f"Unexpected error: {e}")\n\nif __name__ == "__main__":\n    error_handling_example()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"step-3-application-management",children:"Step 3: Application Management"}),"\n",(0,a.jsx)(e.h3,{id:"install-and-manage-applications",children:"Install and Manage Applications"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# application_management.py\nimport calimero\n\ndef application_management_example():\n    """Example of managing applications."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    print("=== Application Management Example ===")\n\n    # Install an application\n    print("Installing application...")\n    app = client.install_application(\n        url="https://example.com/my-app.wasm",\n        metadata=b\'{"name": "My Test App", "version": "1.0.0"}\'\n    )\n    app_id = app["application_id"]\n    print(f"\u2713 Installed app: {app_id}")\n\n    # Get application details\n    app_info = client.get_application(app_id)\n    print(f"\u2713 App details: {app_info}")\n\n    # List all applications\n    apps = client.list_applications()\n    print(f"\u2713 Total applications: {len(apps)}")\n\n    # Uninstall the application\n    print("Uninstalling application...")\n    result = client.uninstall_application(app_id)\n    print(f"\u2713 Uninstall result: {result}")\n\n    return app_id\n\nif __name__ == "__main__":\n    application_management_example()\n'})}),"\n",(0,a.jsx)(e.h3,{id:"development-application-installation",children:"Development Application Installation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# dev_application.py\nimport calimero\n\ndef dev_application_example():\n    """Example of installing development applications."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    print("=== Development Application Example ===")\n\n    # Install development application from local path\n    app = client.install_dev_application(\n        path="/path/to/your/app.wasm",\n        metadata=b\'{"name": "Dev App", "version": "0.1.0"}\'\n    )\n    app_id = app["application_id"]\n    print(f"\u2713 Installed dev app: {app_id}")\n\n    # Clean up\n    client.uninstall_application(app_id)\n    print("\u2713 Cleaned up dev app")\n\nif __name__ == "__main__":\n    dev_application_example()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"step-4-context-management",children:"Step 4: Context Management"}),"\n",(0,a.jsx)(e.h3,{id:"create-and-manage-contexts",children:"Create and Manage Contexts"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# context_management.py\nimport calimero\n\ndef context_management_example():\n    """Example of managing contexts."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    print("=== Context Management Example ===")\n\n    # First, install an application\n    print("Installing application...")\n    app = client.install_application(\n        url="https://example.com/my-app.wasm",\n        metadata=b\'{"name": "Context Test App"}\'\n    )\n    app_id = app["application_id"]\n\n    try:\n        # Create a context\n        print("Creating context...")\n        context = client.create_context(\n            application_id=app_id,\n            protocol="near",\n            params=\'{"network": "testnet"}\'\n        )\n        context_id = context["context_id"]\n        print(f"\u2713 Created context: {context_id}")\n\n        # Get context details\n        context_info = client.get_context(context_id)\n        print(f"\u2713 Context info: {context_info}")\n\n        # Sync the context\n        print("Syncing context...")\n        sync_result = client.sync_context(context_id)\n        print(f"\u2713 Sync result: {sync_result}")\n\n        # Get context identities\n        identities = client.get_context_identities(context_id)\n        print(f"\u2713 Context identities: {identities}")\n\n        # Get context storage\n        storage = client.get_context_storage(context_id)\n        print(f"\u2713 Context storage: {storage}")\n\n        return context_id\n\n    finally:\n        # Clean up\n        print("Cleaning up...")\n        client.delete_context(context_id)\n        client.uninstall_application(app_id)\n        print("\u2713 Cleanup completed")\n\nif __name__ == "__main__":\n    context_management_example()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"step-5-function-execution",children:"Step 5: Function Execution"}),"\n",(0,a.jsx)(e.h3,{id:"execute-smart-contract-functions",children:"Execute Smart Contract Functions"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# function_execution.py\nimport calimero\n\ndef function_execution_example():\n    """Example of executing smart contract functions."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    print("=== Function Execution Example ===")\n\n    # Install application\n    app = client.install_application(\n        url="https://example.com/my-app.wasm",\n        metadata=b\'{"name": "Function Test App"}\'\n    )\n    app_id = app["application_id"]\n\n    try:\n        # Create context\n        context = client.create_context(app_id, "near")\n        context_id = context["context_id"]\n        print(f"\u2713 Created context: {context_id}")\n\n        # Generate executor identity\n        executor_identity = client.generate_context_identity()\n        executor_public_key = executor_identity["public_key"]\n        print(f"\u2713 Generated executor identity")\n\n        # Execute a simple function\n        print("Executing function...")\n        result = client.execute_function(\n            context_id=context_id,\n            method="initialize",\n            args=\'{}\',\n            executor_public_key=executor_public_key\n        )\n        print(f"\u2713 Function result: {result}")\n\n        # Execute function with complex arguments\n        print("Executing function with arguments...")\n        transfer_result = client.execute_function(\n            context_id=context_id,\n            method="transfer",\n            args=\'{"amount": 100, "to": "alice.near", "memo": "Payment"}\',\n            executor_public_key=executor_public_key\n        )\n        print(f"\u2713 Transfer result: {transfer_result}")\n\n        return context_id\n\n    finally:\n        # Clean up\n        client.delete_context(context_id)\n        client.uninstall_application(app_id)\n        print("\u2713 Cleanup completed")\n\nif __name__ == "__main__":\n    function_execution_example()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"step-6-best-practices",children:"Step 6: Best Practices"}),"\n",(0,a.jsx)(e.h3,{id:"connection-management",children:"Connection Management"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# connection_management.py\nimport calimero\n\nclass CalimeroClientWrapper:\n    """Wrapper class for better connection management."""\n\n    def __init__(self, api_url: str, node_name: str = None):\n        self.connection = calimero.create_connection(api_url, node_name)\n        self.client = calimero.create_client(self.connection)\n\n    def get_connection_info(self):\n        """Get connection information."""\n        return {\n            "api_url": self.client.get_api_url(),\n            "peers_count": self.client.get_peers_count()\n        }\n\n    def health_check(self):\n        """Perform a health check."""\n        try:\n            contexts = self.client.list_contexts()\n            return {"status": "healthy", "contexts_count": len(contexts)}\n        except Exception as e:\n            return {"status": "unhealthy", "error": str(e)}\n\n# Usage example\ndef connection_management_example():\n    """Example of proper connection management."""\n    wrapper = CalimeroClientWrapper("http://localhost:2428", "my-node")\n\n    # Get connection info\n    info = wrapper.get_connection_info()\n    print(f"Connection info: {info}")\n\n    # Health check\n    health = wrapper.health_check()\n    print(f"Health status: {health}")\n\nif __name__ == "__main__":\n    connection_management_example()\n'})}),"\n",(0,a.jsx)(e.h3,{id:"error-handling-patterns",children:"Error Handling Patterns"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# error_patterns.py\nimport calimero\nimport time\n\ndef robust_client_operation(client, operation, *args, max_retries=3, **kwargs):\n    """Execute operation with retry logic."""\n    last_error = None\n\n    for attempt in range(max_retries):\n        try:\n            return operation(*args, **kwargs)\n        except RuntimeError as e:\n            last_error = e\n            if attempt < max_retries - 1:\n                print(f"Attempt {attempt + 1} failed, retrying in 2s: {e}")\n                time.sleep(2)\n            else:\n                print(f"All {max_retries} attempts failed")\n                break\n\n    raise last_error\n\ndef error_patterns_example():\n    """Example of robust error handling patterns."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    # Use robust operation wrapper\n    try:\n        contexts = robust_client_operation(client, client.list_contexts)\n        print(f"Successfully retrieved {len(contexts)} contexts")\n    except RuntimeError as e:\n        print(f"Failed to retrieve contexts: {e}")\n\nif __name__ == "__main__":\n    error_patterns_example()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"step-7-testing",children:"Step 7: Testing"}),"\n",(0,a.jsx)(e.h3,{id:"basic-testing",children:"Basic Testing"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# test_basic.py\nimport calimero\n\ndef test_basic_operations():\n    """Test basic client operations."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    # Test connection\n    api_url = client.get_api_url()\n    assert api_url == "http://localhost:2428"\n\n    # Test peers count\n    peers = client.get_peers_count()\n    assert isinstance(peers, (int, dict))\n\n    # Test contexts listing\n    contexts = client.list_contexts()\n    assert isinstance(contexts, (list, dict))\n\n    print("\u2713 All basic tests passed")\n\nif __name__ == "__main__":\n    test_basic_operations()\n'})}),"\n",(0,a.jsx)(e.h3,{id:"integration-testing",children:"Integration Testing"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:'# test_integration.py\nimport calimero\n\ndef test_full_workflow():\n    """Test complete workflow."""\n    connection = calimero.create_connection("http://localhost:2428")\n    client = calimero.create_client(connection)\n\n    print("=== Integration Test ===")\n\n    # Install application\n    app = client.install_application(\n        url="https://example.com/test.wasm",\n        metadata=b\'{"name": "Test App"}\'\n    )\n    app_id = app["application_id"]\n    print(f"\u2713 Installed app: {app_id}")\n\n    try:\n        # Create context\n        context = client.create_context(app_id, "near")\n        context_id = context["context_id"]\n        print(f"\u2713 Created context: {context_id}")\n\n        # Generate identity\n        identity = client.generate_context_identity()\n        print(f"\u2713 Generated identity")\n\n        # Execute function\n        result = client.execute_function(\n            context_id, "test", "{}", identity["public_key"]\n        )\n        print(f"\u2713 Function executed: {result}")\n\n        print("\u2713 Integration test completed successfully")\n\n    finally:\n        # Cleanup\n        client.delete_context(context_id)\n        client.uninstall_application(app_id)\n        print("\u2713 Cleanup completed")\n\nif __name__ == "__main__":\n    test_full_workflow()\n'})}),"\n",(0,a.jsx)(e.h2,{id:"resources",children:"Resources"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"GitHub Repository"}),":\n",(0,a.jsx)(e.a,{href:"https://github.com/calimero-network/calimero-client-py",children:"calimero-client-py"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"PyPI Package"}),":\n",(0,a.jsx)(e.a,{href:"https://pypi.org/project/calimero-client-py/",children:"calimero-client-py"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Community Discord"}),": ",(0,a.jsx)(e.a,{href:"https://discord.gg/calimero",children:"Join the conversation"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Email Support"}),": ",(0,a.jsx)(e.a,{href:"mailto:team@calimero.network",children:"team@calimero.network"})]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"Happy coding with the Calimero Python client! \ud83d\udc0d\u2728"})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}}}]);