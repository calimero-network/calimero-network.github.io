"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6724],{68503:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>o,frontMatter:()=>r,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"tutorials/login-with-wallets/ethereum-wallet","title":"Ethereum Wallet","description":"Logging in with Ethereum Wallet","source":"@site/docs/06-tutorials/01-login-with-wallets/04-ethereum-wallet.mdx","sourceDirName":"06-tutorials/01-login-with-wallets","slug":"/tutorials/login-with-wallets/ethereum-wallet","permalink":"/tutorials/login-with-wallets/ethereum-wallet","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/06-tutorials/01-login-with-wallets/04-ethereum-wallet.mdx","tags":[],"version":"current","lastUpdatedAt":1759330694000,"sidebarPosition":4,"frontMatter":{"id":"ethereum-wallet","title":"Ethereum Wallet"},"sidebar":"tutorialSidebar","previous":{"title":"ICP Wallet","permalink":"/tutorials/login-with-wallets/icp-wallet"},"next":{"title":"Create Context","permalink":"/tutorials/create-context"}}');var s=i(86070),l=i(83545);const r={id:"ethereum-wallet",title:"Ethereum Wallet"},a=void 0,u={},h=[{value:"Logging in with Ethereum Wallet",id:"logging-in-with-ethereum-wallet",level:2},{value:"Authentication Flow",id:"authentication-flow",level:2},{value:"1. User Initiates Login",id:"1-user-initiates-login",level:3},{value:"2. Server Issues Authentication Challenge",id:"2-server-issues-authentication-challenge",level:3},{value:"3. User Signs Authentication Challenge",id:"3-user-signs-authentication-challenge",level:3},{value:"4. Signature Sent to Backend",id:"4-signature-sent-to-backend",level:3},{value:"5. Signature Verification",id:"5-signature-verification",level:3},{value:"6. Successful Authentication",id:"6-successful-authentication",level:3},{value:"Authentication Implementation",id:"authentication-implementation",level:2},{value:"Supported Ethereum Wallets",id:"supported-ethereum-wallets",level:2},{value:"Security Features",id:"security-features",level:2}];function c(e){const t={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"logging-in-with-ethereum-wallet",children:"Logging in with Ethereum Wallet"}),"\n",(0,s.jsx)(t.p,{children:"Calimero allows users to authenticate via their Ethereum wallet (such as\nMetamask), ensuring secure access to the Admin Dashboard. The authentication\nprocess leverages Ethereum's ECDSA signature verification through the\nauthentication service."}),"\n",(0,s.jsx)(t.h2,{id:"authentication-flow",children:"Authentication Flow"}),"\n",(0,s.jsx)(t.p,{children:"The Ethereum authentication in Calimero follows the same challenge-response\npattern as other supported wallets. Here's how it works:"}),"\n",(0,s.jsx)(t.h3,{id:"1-user-initiates-login",children:"1. User Initiates Login"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The user initiates login and is redirected to the authentication page"}),"\n",(0,s.jsx)(t.li,{children:"They are presented with wallet options, typically Metamask for Ethereum\nauthentication"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"2-server-issues-authentication-challenge",children:"2. Server Issues Authentication Challenge"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The authentication service generates a unique challenge for the user to sign"}),"\n",(0,s.jsx)(t.li,{children:"This challenge typically includes a timestamp and unique identifier to prevent\nreplay attacks"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"3-user-signs-authentication-challenge",children:"3. User Signs Authentication Challenge"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The user is prompted to sign the server-issued structured challenge using\ntheir Ethereum wallet."}),"\n",(0,s.jsx)(t.li,{children:"The wallet extension displays the challenge data and requests user\nconfirmation."}),"\n",(0,s.jsx)(t.li,{children:"The user approves the signature request in their wallet."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"4-signature-sent-to-backend",children:"4. Signature Sent to Backend"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"After the user signs the challenge, the signature is sent back to the server\nfor verification."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"5-signature-verification",children:"5. Signature Verification"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"The backend verifies the Ethereum signature to ensure its authenticity using\nstandard ECDSA signature verification."}),"\n",(0,s.jsx)(t.li,{children:"The signature is verified against the structured challenge that was signed."}),"\n",(0,s.jsx)(t.li,{children:"If the signature is valid, the user's Ethereum address is extracted and stored\nas the user's unique identifier."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"6-successful-authentication",children:"6. Successful Authentication"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Once verified, the user is successfully authenticated."}),"\n",(0,s.jsx)(t.li,{children:"The user's identifier is the wallet's public key."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"authentication-implementation",children:"Authentication Implementation"}),"\n",(0,s.jsx)(t.p,{children:"Calimero's Ethereum authentication uses structured challenges with ECDSA\nsignature verification:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Structured Challenge Generation"}),": The server generates a unique structured\nchallenge for each login attempt using the Request format"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Signature Verification"}),": The backend verifies the ECDSA signature against\nthe structured challenge"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Identity Storage"}),": The user's Ethereum wallet public key serves as their\nunique identifier"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"supported-ethereum-wallets",children:"Supported Ethereum Wallets"}),"\n",(0,s.jsx)(t.p,{children:"Calimero supports MetaMask for Ethereum authentication:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Metamask"}),": The most popular Web3 wallet extension"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"security-features",children:"Security Features"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Structured Challenge-Response Authentication"}),": Each login attempt uses a\nunique server-generated structured challenge with specific fields for enhanced\nsecurity"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"ECDSA Signature Verification"}),": Uses Ethereum's standard cryptographic\nmethods for signature validation"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Public Key-based Identity"}),": User identity is tied to their Ethereum wallet\npublic key, ensuring decentralized authentication"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Standard Wallet Security"}),": Leverages the security features of established\nEthereum wallets like Metamask"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This authentication flow leverages Ethereum's robust ECDSA signature\nverification to provide secure, decentralized access to Calimero's features\nwhile maintaining consistency with the blockchain's native security model."})]})}function o(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},83545:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(30758);const s={},l=n.createContext(s);function r(e){const t=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);