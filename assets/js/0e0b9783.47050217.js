"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1719],{18267:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"developer-tools/merobox/resource-management","title":"Resource Management","description":"Resource limits, monitoring, and optimization for Merobox deployments.","source":"@site/docs/05-developer-tools/merobox/resource-management.mdx","sourceDirName":"05-developer-tools/merobox","slug":"/developer-tools/merobox/resource-management","permalink":"/developer-tools/merobox/resource-management","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/05-developer-tools/merobox/resource-management.mdx","tags":[],"version":"current","lastUpdatedAt":1757931844000,"sidebarPosition":7.7,"frontMatter":{"title":"Resource Management","description":"Resource limits, monitoring, and optimization for Merobox deployments.","sidebar_position":7.7},"sidebar":"tutorialSidebar","previous":{"title":"Testing Framework Integration","permalink":"/developer-tools/merobox/testing-framework-integration"},"next":{"title":"Security Configuration","permalink":"/developer-tools/merobox/security-configuration"}}');var r=o(86070),s=o(48854);const a={title:"Resource Management",description:"Resource limits, monitoring, and optimization for Merobox deployments.",sidebar_position:7.7},t="Resource Management",c={},l=[{value:"Memory and CPU Limits",id:"memory-and-cpu-limits",level:2},{value:"Basic Resource Configuration",id:"basic-resource-configuration",level:3},{value:"Advanced Resource Configuration",id:"advanced-resource-configuration",level:3},{value:"Resource Limits per Node",id:"resource-limits-per-node",level:3},{value:"Storage Configuration",id:"storage-configuration",level:2},{value:"Basic Volume Configuration",id:"basic-volume-configuration",level:3},{value:"Advanced Storage Configuration",id:"advanced-storage-configuration",level:3},{value:"Storage Performance Optimization",id:"storage-performance-optimization",level:3},{value:"Resource Monitoring",id:"resource-monitoring",level:2},{value:"Basic Monitoring Configuration",id:"basic-monitoring-configuration",level:3},{value:"Advanced Monitoring Setup",id:"advanced-monitoring-setup",level:3},{value:"Prometheus Integration",id:"prometheus-integration",level:3},{value:"Resource Optimization",id:"resource-optimization",level:2},{value:"CPU Optimization",id:"cpu-optimization",level:3},{value:"Memory Optimization",id:"memory-optimization",level:3},{value:"I/O Optimization",id:"io-optimization",level:3},{value:"Auto-Scaling",id:"auto-scaling",level:2},{value:"Horizontal Scaling",id:"horizontal-scaling",level:3},{value:"Vertical Scaling",id:"vertical-scaling",level:3},{value:"Resource Quotas",id:"resource-quotas",level:2},{value:"Namespace Quotas",id:"namespace-quotas",level:3},{value:"Per-Node Quotas",id:"per-node-quotas",level:3},{value:"Resource Troubleshooting",id:"resource-troubleshooting",level:2},{value:"Common Resource Issues",id:"common-resource-issues",level:3},{value:"Resource Debugging",id:"resource-debugging",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Resource Planning",id:"resource-planning",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Cost Optimization",id:"cost-optimization",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"resource-management",children:"Resource Management"})}),"\n",(0,r.jsx)(n.p,{children:"This guide covers resource management for Merobox, including memory and CPU\nlimits, storage configuration, and resource monitoring."}),"\n",(0,r.jsx)(n.h2,{id:"memory-and-cpu-limits",children:"Memory and CPU Limits"}),"\n",(0,r.jsx)(n.p,{children:"Configure resource limits for nodes to ensure optimal performance and prevent\nresource exhaustion:"}),"\n",(0,r.jsx)(n.h3,{id:"basic-resource-configuration",children:"Basic Resource Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  resources:\n    memory: '1G'\n    memory_swap: '2G'\n    cpus: '0.5'\n    cpu_quota: 50000\n    cpu_period: 100000\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-resource-configuration",children:"Advanced Resource Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Detailed resource configuration\nnodes:\n  resources:\n    # Memory settings\n    memory: '2G'\n    memory_swap: '4G'\n    memory_reservation: '1G'\n    memory_swappiness: 10\n\n    # CPU settings\n    cpus: '1.5'\n    cpu_quota: 75000\n    cpu_period: 100000\n    cpu_shares: 1024\n\n    # I/O settings\n    blkio_weight: 300\n    blkio_weight_device:\n      - path: /dev/sda\n        weight: 200\n    device_read_bps:\n      - path: /dev/sda\n        rate: '10MB'\n    device_write_bps:\n      - path: /dev/sda\n        rate: '10MB'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"resource-limits-per-node",children:"Resource Limits per Node"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Different resource limits for different nodes\nnodes:\n  - name: calimero-node-1\n    resources:\n      memory: '4G'\n      cpus: '2.0'\n  - name: calimero-node-2\n    resources:\n      memory: '2G'\n      cpus: '1.0'\n  - name: calimero-node-3\n    resources:\n      memory: '1G'\n      cpus: '0.5'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"storage-configuration",children:"Storage Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Configure persistent storage for data persistence and performance:"}),"\n",(0,r.jsx)(n.h3,{id:"basic-volume-configuration",children:"Basic Volume Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  volumes:\n    - type: bind\n      source: ./data\n      target: /calimero/data\n    - type: volume\n      source: calimero-logs\n      target: /calimero/logs\n  tmpfs:\n    - /tmp: size=100M,noexec,nosuid,nodev\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-storage-configuration",children:"Advanced Storage Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Advanced storage setup\nnodes:\n  volumes:\n    # Bind mount for configuration\n    - type: bind\n      source: ./config\n      target: /calimero/config\n      read_only: true\n\n    # Named volume for data\n    - type: volume\n      source: calimero-data\n      target: /calimero/data\n      driver: local\n      driver_opts:\n        type: none\n        o: bind\n        device: /mnt/calimero-data\n\n    # External volume for logs\n    - type: volume\n      source: calimero-logs\n      target: /calimero/logs\n      external: true\n\n    # Tmpfs for temporary files\n    - type: tmpfs\n      target: /tmp\n      tmpfs:\n        size: 100M\n        mode: 1777\n        noexec: true\n        nosuid: true\n        nodev: true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"storage-performance-optimization",children:"Storage Performance Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Storage performance tuning\nstorage:\n  optimization:\n    # Use SSD storage for better performance\n    device: /dev/nvme0n1\n    filesystem: ext4\n    mount_options:\n      - noatime\n      - nodiratime\n      - data=writeback\n      - commit=60\n\n  # Database storage optimization\n  database:\n    type: postgresql\n    storage:\n      device: /dev/nvme0n1p2\n      mount_point: /var/lib/postgresql\n      options:\n        - noatime\n        - nodiratime\n        - data=writeback\n"})}),"\n",(0,r.jsx)(n.h2,{id:"resource-monitoring",children:"Resource Monitoring"}),"\n",(0,r.jsx)(n.p,{children:"Monitor resource usage to identify bottlenecks and optimize performance:"}),"\n",(0,r.jsx)(n.h3,{id:"basic-monitoring-configuration",children:"Basic Monitoring Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"monitoring:\n  enabled: true\n  metrics:\n    - cpu_usage\n    - memory_usage\n    - disk_usage\n    - network_io\n  interval: 5\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-monitoring-setup",children:"Advanced Monitoring Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Comprehensive monitoring\nmonitoring:\n  enabled: true\n  metrics:\n    # System metrics\n    - cpu_usage\n    - memory_usage\n    - disk_usage\n    - network_io\n    - load_average\n\n    # Application metrics\n    - request_count\n    - response_time\n    - error_rate\n    - active_connections\n\n    # Custom metrics\n    - blockchain_height\n    - consensus_participation\n    - transaction_throughput\n\n  # Monitoring intervals\n  intervals:\n    system: 5s\n    application: 10s\n    custom: 30s\n\n  # Alerting configuration\n  alerts:\n    - metric: memory_usage\n      threshold: 80\n      window: 60s\n      action: restart_node\n    - metric: cpu_usage\n      threshold: 90\n      window: 30s\n      action: scale_up\n    - metric: disk_usage\n      threshold: 85\n      window: 120s\n      action: cleanup_logs\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prometheus-integration",children:"Prometheus Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Prometheus monitoring\nmonitoring:\n  prometheus:\n    enabled: true\n    port: 9090\n    scrape_interval: 15s\n    targets:\n      - calimero-node-1:8080\n      - calimero-node-2:8080\n      - calimero-node-3:8080\n\n    # Custom metrics\n    custom_metrics:\n      - name: calimero_block_height\n        type: gauge\n        help: 'Current blockchain height'\n      - name: calimero_consensus_rounds\n        type: counter\n        help: 'Number of consensus rounds completed'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"resource-optimization",children:"Resource Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"cpu-optimization",children:"CPU Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# CPU optimization settings\ncpu_optimization:\n  # CPU affinity\n  cpu_affinity:\n    - 0,1 # Use cores 0 and 1\n    - 2,3 # Use cores 2 and 3\n\n  # CPU governor\n  cpu_governor: performance\n\n  # CPU frequency scaling\n  cpu_scaling:\n    min_freq: 2.0GHz\n    max_freq: 3.5GHz\n\n  # Process priority\n  process_priority: -10 # High priority\n"})}),"\n",(0,r.jsx)(n.h3,{id:"memory-optimization",children:"Memory Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Memory optimization\nmemory_optimization:\n  # Memory allocation strategy\n  allocation_strategy: jemalloc\n\n  # Memory pools\n  memory_pools:\n    - name: small_objects\n      size: 64MB\n      alignment: 8\n    - name: large_objects\n      size: 256MB\n      alignment: 64\n\n  # Garbage collection\n  gc:\n    enabled: true\n    threshold: 80%\n    interval: 30s\n    strategy: concurrent\n"})}),"\n",(0,r.jsx)(n.h3,{id:"io-optimization",children:"I/O Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# I/O optimization\nio_optimization:\n  # I/O scheduler\n  io_scheduler: mq-deadline\n\n  # Read-ahead\n  read_ahead: 1024\n\n  # Write caching\n  write_cache:\n    enabled: true\n    size: 256MB\n    sync_interval: 5s\n\n  # Disk I/O limits\n  disk_limits:\n    read_iops: 1000\n    write_iops: 1000\n    read_bps: 100MB\n    write_bps: 100MB\n"})}),"\n",(0,r.jsx)(n.h2,{id:"auto-scaling",children:"Auto-Scaling"}),"\n",(0,r.jsx)(n.h3,{id:"horizontal-scaling",children:"Horizontal Scaling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Auto-scaling configuration\nautoscaling:\n  enabled: true\n  min_nodes: 2\n  max_nodes: 10\n\n  # Scaling triggers\n  triggers:\n    - metric: cpu_usage\n      threshold: 70\n      scale_up: true\n      scale_down: false\n    - metric: memory_usage\n      threshold: 80\n      scale_up: true\n      scale_down: false\n    - metric: request_rate\n      threshold: 1000\n      scale_up: true\n      scale_down: false\n\n  # Scaling policies\n  policies:\n    scale_up:\n      step_size: 2\n      cooldown: 300s\n    scale_down:\n      step_size: 1\n      cooldown: 600s\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vertical-scaling",children:"Vertical Scaling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Vertical scaling\nvertical_scaling:\n  enabled: true\n\n  # Resource scaling\n  resources:\n    memory:\n      min: '1G'\n      max: '8G'\n      step: '1G'\n    cpus:\n      min: '0.5'\n      max: '4.0'\n      step: '0.5'\n\n  # Scaling triggers\n  triggers:\n    - metric: memory_usage\n      threshold: 85\n      action: increase_memory\n    - metric: cpu_usage\n      threshold: 90\n      action: increase_cpus\n"})}),"\n",(0,r.jsx)(n.h2,{id:"resource-quotas",children:"Resource Quotas"}),"\n",(0,r.jsx)(n.h3,{id:"namespace-quotas",children:"Namespace Quotas"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Resource quotas\nquotas:\n  namespace: calimero\n\n  # Resource limits\n  limits:\n    cpu: '10'\n    memory: '20Gi'\n    pods: '20'\n    persistentvolumeclaims: '10'\n\n  # Resource requests\n  requests:\n    cpu: '5'\n    memory: '10Gi'\n    pods: '10'\n    persistentvolumeclaims: '5'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"per-node-quotas",children:"Per-Node Quotas"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# Per-node resource quotas\nnode_quotas:\n  - name: calimero-node-1\n    limits:\n      cpu: '2'\n      memory: '4Gi'\n    requests:\n      cpu: '1'\n      memory: '2Gi'\n\n  - name: calimero-node-2\n    limits:\n      cpu: '1'\n      memory: '2Gi'\n    requests:\n      cpu: '0.5'\n      memory: '1Gi'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"resource-troubleshooting",children:"Resource Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-resource-issues",children:"Common Resource Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check resource usage\ndocker stats $(docker ps -q --filter "name=calimero-")\n\n# Check memory usage\ndocker exec calimero-node-1 free -h\n\n# Check CPU usage\ndocker exec calimero-node-1 top\n\n# Check disk usage\ndocker exec calimero-node-1 df -h\n\n# Check I/O usage\ndocker exec calimero-node-1 iostat -x 1\n'})}),"\n",(0,r.jsx)(n.h3,{id:"resource-debugging",children:"Resource Debugging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable resource debugging\nexport DOCKER_BUILDKIT=0\nexport DOCKER_CLI_EXPERIMENTAL=enabled\n\n# Check container resource limits\ndocker inspect calimero-node-1 | jq '.[0].HostConfig.Memory'\ndocker inspect calimero-node-1 | jq '.[0].HostConfig.CpuQuota'\n\n# Monitor resource usage in real-time\nwatch -n 1 'docker stats --no-stream $(docker ps -q --filter \"name=calimero-\")'\n\n# Check system resources\nhtop\niotop\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"resource-planning",children:"Resource Planning"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Capacity Planning"}),": Plan resources based on expected load"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring"}),": Continuously monitor resource usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scaling"}),": Implement auto-scaling for dynamic workloads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),": Regularly optimize resource allocation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Right-sizing"}),": Use appropriately sized resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Caching"}),": Implement caching to reduce resource usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load Balancing"}),": Distribute load across multiple nodes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitoring"}),": Use monitoring to identify bottlenecks"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"cost-optimization",children:"Cost Optimization"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource Efficiency"}),": Optimize resource utilization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Auto-scaling"}),": Scale resources based on demand"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spot Instances"}),": Use spot instances for non-critical workloads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reserved Instances"}),": Use reserved instances for predictable workloads"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Now that you understand resource management:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./security-configuration",children:"Security Configuration"})," - Security settings and\npolicies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./advanced-configuration",children:"Advanced Configuration"})," - Other advanced features"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},48854:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var i=o(30758);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);