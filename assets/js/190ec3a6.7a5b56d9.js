"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7707],{8026:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(6070),t=i(1503);const r={id:"admin-client-api",title:"Admin Client API"},l=void 0,a={id:"learn/core-concepts/node/admin-client-api",title:"Admin Client API",description:"About Admin Client API",source:"@site/docs/02-learn/03-core-concepts/02-node/admin-api.mdx",sourceDirName:"02-learn/03-core-concepts/02-node",slug:"/learn/core-concepts/node/admin-client-api",permalink:"/learn/core-concepts/node/admin-client-api",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedAt:1729079481e3,frontMatter:{id:"admin-client-api",title:"Admin Client API"},sidebar:"tutorialSidebar",previous:{title:"Network",permalink:"/learn/core-concepts/node/network"},next:{title:"Applications",permalink:"/learn/core-concepts/applications"}},o={},c=[{value:"About Admin Client API",id:"about-admin-client-api",level:3},{value:"How to Use",id:"how-to-use",level:3},{value:"API Endpoints",id:"api-endpoints",level:3}];function d(e){const n={code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"about-admin-client-api",children:"About Admin Client API"}),"\n",(0,s.jsxs)(n.p,{children:["Our Admin Client API offers a comprehensive set of endpoints designed to\nfacilitate the management and administration of the node states. With intuitive\nroutes and robust handlers, administrators can seamlessly navigate various node\noperations with ease and efficiency. The Admin Client API, paired with the\n",(0,s.jsx)(n.strong,{children:"Admin UI"})," \u2014 a web application, is your go-to tool for managing node states,\nsimplifying interactions with the server."]}),"\n",(0,s.jsx)(n.p,{children:"The Admin API empowers you to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Revoke root keys"}),"\n",(0,s.jsx)(n.li,{children:"Request validation challenge"}),"\n",(0,s.jsx)(n.li,{children:"Install and list node applications"}),"\n",(0,s.jsx)(n.li,{children:"Fetch decentralized identifiers (DID)"}),"\n",(0,s.jsx)(n.li,{children:"Manage client keys"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In essence, the Admin API simplifies node management, while the Admin UI offers\nan intuitive interface for seamless control."}),"\n",(0,s.jsx)(n.h3,{id:"how-to-use",children:"How to Use"}),"\n",(0,s.jsxs)(n.p,{children:["To utilize the Admin API endpoints effectively, the recommended approach is to\nleverage the ",(0,s.jsx)(n.strong,{children:"Admin UI web application"}),". The Admin UI automates various steps\ninvolved in interacting with the Admin API, ensuring seamless integration and\nproviding the best user experience."]}),"\n",(0,s.jsx)(n.p,{children:"By using the Admin UI, administrators can streamline their workflow, access\nessential functionalities with ease, and benefit from intuitive visualizations\nand controls. This approach not only simplifies the management of decentralized\nnetworks but also ensures that administrators have access to the best options\nand features available."}),"\n",(0,s.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Root Key Request"})," - This endpoint allows administrators to add root keys\nfor secure authentication and access control within the decentralized network\nenvironment. Validation Challenge Generation"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Pre requirements"}),' - Before calling "Root Key Request" endpoint, it is\nessential to first call the "/request-challenge" endpoint. This step is\nnecessary as the "Root Key Request" endpoint requires a challenge to be\npassed and verified during the process of adding the root key']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/root-key"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"accountId"})," : The account identifier associated with the request."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"signature"})," : The signature generated by signing the challenge and message\nwith the wallet."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"publicKey"})," : The public key used for verification."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"callbackUrl"})," : The URL to which the response callback should be sent."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Note: The parameters for this POST request, including accountId, signature,\nand publicKey, are generated by signing the challenge and message with the\nwallet."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example call with curl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"accountId": "<ACCOUNT_ID>", "signature": "<SIGNATURE>", "publicKey": "<PUBLIC_KEY>", "callbackUrl": "<CALLBACK_URL>"}\' \\\nhttp://<NODE-URL>/admin-api/root-key\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n    { data: "Root key added" }\n> Error response\n    { error: "Failed to add root key: <error_message>" }\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Request authentication challenge"})," - Administrators can utilize this\nendpoint to generate validation challenges, enabling users to authenticate\ntheir identity via wallet signatures for enhanced security measures."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/request-challenge"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example call with curl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl -X POST http://<NODE-URL>/admin-api/request-challenge\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n   { data: { challenge: <challenge> } }\n> Error response\n   { error: "Failed to fetch challenge: <error_message>" }\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Install Application"})," - This endpoint facilitates the installation of new\napplications on the node, expanding the functionality and capabilities of the\ndecentralized network ecosystem."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/install-application"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"application"})," : Application name - can be selected from the Admin UI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"version"})," : Application release version - can be selected from the Admin UI"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example call with curl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"application": "<APPLICATION_NAME>", "version": "<VERSION>"}\' \\\nhttp://<NODE-URL>/admin-api/install-application\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n    { data: "Application Installed" }\n> Error response\n    { error: "Failed to install application: <error_message>" }\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"List installed Application"})," - This endpoint returns a list of installed\napplications, providing valuable insights into the current state of the\ndecentralized network ecosystem"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/applications"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example call with curl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl -X GET http://<NODE-URL>/admin-api/applications\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n    { data: {\n     applications:\n     [{\n         application_name: <application_name>,\n         version: <application_version>\n     }]\n    }}\n> Error response\n    { error: "Failed to fetch installed applications: <error_message>" }\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Add Client Key"})," - Administrators can add new client keys via this\nendpoint, enabling seamless access and authentication for authorized users\nwithin the network."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"POST"})," ",(0,s.jsx)(n.code,{children:"/add-client-key"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"wallet_signature"})," : Signature generated with the wallet"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"payload"})," : Reqest payload containing message and metadata"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"wallet_metadata"})," : Crypto wallet metadata containing information for\nwallet_type and signing_key"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example call with curl"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'curl -X POST \\\n-H "Content-Type: application/json" \\\n-d \'{"wallet_signature": "<WALLET_SIGNATURE>", "payload": { "message": <MESSAGE>, "metadata": <METADATA_VALUE>}. "wallet_metadata": {"wallet_type": <WALLET_TYPE>, "signing_key": <SIGNING_KEY>}}\' \\\nhttp://<NODE-URL>/admin-api/add-client-key\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n    { data: "Client key stored" }\n> Error response\n    { error: "Failed to add client key: <error_message>" }\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Get the DID"})," - Fetches the Decentralized Identifier (DID) associated with\nthe node, providing a unique identifier for network entities and enabling\ninteroperability across decentralized applications."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"GET"})," ",(0,s.jsx)(n.code,{children:"/did"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl -X GET http://<NODE-URL>/admin-api/did\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'> Success response\n    { data:\n     {\n         id: <id>,\n         root_keys:\n         [{\n             signing_key: <signing_key>\n         }]\n     }\n    }\n> Error response\n   { error: "Failed to fetch DID: <error_message>" }\n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1503:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(758);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);