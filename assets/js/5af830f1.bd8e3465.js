"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1337],{3174:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"explore/why-not/ipfs","title":"IPFS","description":"Why not IPFS?","source":"@site/docs/01-explore/04-why-not/02-ipfs.mdx","sourceDirName":"01-explore/04-why-not","slug":"/explore/why-not/ipfs","permalink":"/explore/why-not/ipfs","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/01-explore/04-why-not/02-ipfs.mdx","tags":[],"version":"current","lastUpdatedAt":1733218267000,"sidebarPosition":2,"frontMatter":{"id":"ipfs","title":"IPFS"},"sidebar":"tutorialSidebar","previous":{"title":"Blockchain","permalink":"/explore/why-not/blockchain"},"next":{"title":"ZK","permalink":"/explore/why-not/zk"}}');var i=o(6070),s=o(5658);const r={id:"ipfs",title:"IPFS"},a=void 0,l={},c=[{value:"Why not IPFS?",id:"why-not-ipfs",level:2},{value:"Calimero vs IPFS",id:"calimero-vs-ipfs",level:2}];function p(e){const t={h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"why-not-ipfs",children:"Why not IPFS?"}),"\n",(0,i.jsx)(t.p,{children:"IPFS is a storage solution, it's not designed for generic compute."}),"\n",(0,i.jsx)(t.h2,{id:"calimero-vs-ipfs",children:"Calimero vs IPFS"}),"\n",(0,i.jsx)(t.p,{children:"Calimero is designed to be a general-purpose compute engine that can be used to\nbuild a wide variety of applications. Also worth noting that Calimero does offer\na way to store encrypted data, effectively making it a storage solution as well."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},5658:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>a});var n=o(758);const i={},s=n.createContext(i);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);