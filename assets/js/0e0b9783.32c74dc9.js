"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1719],{79810:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"developer-tools/merobox/resource-management","title":"Resource Management","description":"Basic resource configuration and management for Merobox nodes.","source":"@site/docs/05-developer-tools/merobox/resource-management.mdx","sourceDirName":"05-developer-tools/merobox","slug":"/developer-tools/merobox/resource-management","permalink":"/developer-tools/merobox/resource-management","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/05-developer-tools/merobox/resource-management.mdx","tags":[],"version":"current","lastUpdatedAt":1759753098000,"sidebarPosition":7.7,"frontMatter":{"title":"Resource Management","description":"Basic resource configuration and management for Merobox nodes.","sidebar_position":7.7},"sidebar":"tutorialSidebar","previous":{"title":"Testing Framework Integration","permalink":"/developer-tools/merobox/testing-framework-integration"},"next":{"title":"Security Configuration","permalink":"/developer-tools/merobox/security-configuration"}}');var i=o(86070),s=o(83545);const t={title:"Resource Management",description:"Basic resource configuration and management for Merobox nodes.",sidebar_position:7.7},a="Resource Management",c={},l=[{value:"Basic Resource Configuration",id:"basic-resource-configuration",level:2},{value:"Memory and CPU Limits",id:"memory-and-cpu-limits",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Node Configuration",id:"node-configuration",level:2},{value:"Basic Node Setup",id:"basic-node-setup",level:3},{value:"Multiple Node Configuration",id:"multiple-node-configuration",level:3},{value:"Environment Variables",id:"environment-variables-1",level:2},{value:"Core Configuration",id:"core-configuration",level:3},{value:"Docker Configuration",id:"docker-configuration",level:3},{value:"Authentication Service",id:"authentication-service",level:2},{value:"Basic Auth Service",id:"basic-auth-service",level:3},{value:"Auth Service Environment Variables",id:"auth-service-environment-variables",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Resource Issues",id:"common-resource-issues",level:3},{value:"Resource Debugging",id:"resource-debugging",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Resource Planning",id:"resource-planning",level:3},{value:"Performance Tips",id:"performance-tips",level:3},{value:"Troubleshooting Tips",id:"troubleshooting-tips",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"resource-management",children:"Resource Management"})}),"\n",(0,i.jsx)(n.p,{children:"This guide covers basic resource configuration for Merobox nodes, including\nmemory and CPU limits for Docker containers."}),"\n",(0,i.jsx)(n.h2,{id:"basic-resource-configuration",children:"Basic Resource Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Merobox supports basic resource limits for Docker containers running Calimero\nnodes:"}),"\n",(0,i.jsx)(n.h3,{id:"memory-and-cpu-limits",children:"Memory and CPU Limits"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  count: 2\n  image: ghcr.io/calimero-network/merod:edge\n  resources:\n    memory: '1G' # Memory limit\n    cpus: '0.5' # CPU limit\n"})}),"\n",(0,i.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Configure resource-related environment variables:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  count: 2\n  image: ghcr.io/calimero-network/merod:edge\n  environment:\n    RUST_LOG: 'info'\n  resources:\n    memory: '2G'\n    cpus: '1.0'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"node-configuration",children:"Node Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-node-setup",children:"Basic Node Setup"}),"\n",(0,i.jsx)(n.p,{children:"Configure Calimero nodes with basic settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  chain_id: testnet-1\n  count: 2\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: calimero-node\n  base_port: 2428\n  base_rpc_port: 2528\n  resources:\n    memory: '1G'\n    cpus: '0.5'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"multiple-node-configuration",children:"Multiple Node Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Set up multiple nodes with different resource allocations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  chain_id: testnet-1\n  count: 3\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: calimero-node\n  resources:\n    memory: '2G'\n    cpus: '1.0'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables-1",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Configure Merobox behavior using environment variables:"}),"\n",(0,i.jsx)(n.h3,{id:"core-configuration",children:"Core Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Docker daemon connection\nexport DOCKER_HOST="unix:///var/run/docker.sock"\n\n# Logging level (if supported)\nexport LOG_LEVEL="INFO"  # DEBUG, INFO, WARNING, ERROR\n'})}),"\n",(0,i.jsx)(n.h3,{id:"docker-configuration",children:"Docker Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Docker daemon settings\nexport DOCKER_HOST="unix:///var/run/docker.sock"\n\n# Docker build settings\nexport DOCKER_BUILDKIT="1"\nexport DOCKER_CLI_EXPERIMENTAL="enabled"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"authentication-service",children:"Authentication Service"}),"\n",(0,i.jsx)(n.p,{children:"Configure authentication service for Merobox nodes:"}),"\n",(0,i.jsx)(n.h3,{id:"basic-auth-service",children:"Basic Auth Service"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Enable authentication service\nauth_service: true\nauth_image: ghcr.io/calimero-network/mero-auth:edge\n\nnodes:\n  count: 2\n  image: ghcr.io/calimero-network/merod:edge\n  resources:\n    memory: '1G'\n    cpus: '0.5'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"auth-service-environment-variables",children:"Auth Service Environment Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Auth service is configured through CLI flags\n# merobox run --auth-service --auth-image ghcr.io/calimero-network/mero-auth:edge\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-resource-issues",children:"Common Resource Issues"}),"\n",(0,i.jsx)(n.p,{children:"Check resource usage and node status:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check running Merobox nodes\nmerobox list\n\n# Check node health\nmerobox health\n\n# View node logs\nmerobox logs calimero-node-1\n\n# Check Docker container resource usage\ndocker stats $(docker ps -q --filter "name=calimero-")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"resource-debugging",children:"Resource Debugging"}),"\n",(0,i.jsx)(n.p,{children:"Enable debug logging for troubleshooting:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Enable debug logging\nexport LOG_LEVEL=DEBUG\n\n# Run workflow with verbose output\nmerobox bootstrap run workflow.yml --verbose\n\n# Check Docker container details\ndocker inspect calimero-node-1\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"resource-planning",children:"Resource Planning"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start Small"}),": Begin with minimal resources and scale up as needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor Usage"}),": Use ",(0,i.jsx)(n.code,{children:"docker stats"})," to monitor actual resource consumption"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Workloads"}),": Test your applications with realistic data loads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Plan for Growth"}),": Consider future scaling requirements"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"performance-tips",children:"Performance Tips"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory Allocation"}),": Start with 1-2GB memory per node for most workloads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU Allocation"}),": Use 0.5-1.0 CPU cores per node for basic operations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment Variables"}),": Use appropriate ",(0,i.jsx)(n.code,{children:"RUST_LOG"})," levels for debugging"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker Images"}),": Use specific image tags instead of ",(0,i.jsx)(n.code,{children:"latest"})," for stability"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"troubleshooting-tips",children:"Troubleshooting Tips"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check Logs"}),": Always check node logs first when issues occur"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource Limits"}),": Ensure Docker has sufficient resources available"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Network Issues"}),": Verify port availability and network connectivity"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Image Updates"}),": Keep Docker images updated for latest features"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Now that you understand basic resource management:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./node-management",children:"Node Management"})," - Complete node management guide"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./workflows",children:"Workflows"})," - Workflow system and automation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./environment-variables",children:"Environment Variables"})," - Configuration options"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting"})," - Common issues and solutions"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},83545:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>a});var r=o(30758);const i={},s=r.createContext(i);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);