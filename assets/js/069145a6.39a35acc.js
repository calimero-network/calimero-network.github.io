"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3639],{83545:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var o=n(30758);const i={},r=o.createContext(i);function l(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:t},e.children)}},91210:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"developer-tools/merobox/quick-start-tutorials","title":"Quick Start Tutorials","description":"Step-by-step tutorials to get you started with Merobox quickly.","source":"@site/docs/05-developer-tools/merobox/quick-start-tutorials.mdx","sourceDirName":"05-developer-tools/merobox","slug":"/developer-tools/merobox/quick-start-tutorials","permalink":"/developer-tools/merobox/quick-start-tutorials","draft":false,"unlisted":false,"editUrl":"https://github.com/calimero-network/calimero-network.github.io/edit/master/docs/05-developer-tools/merobox/quick-start-tutorials.mdx","tags":[],"version":"current","lastUpdatedAt":1759662622000,"sidebarPosition":4.1,"frontMatter":{"title":"Quick Start Tutorials","description":"Step-by-step tutorials to get you started with Merobox quickly.","sidebar_position":4.1},"sidebar":"tutorialSidebar","previous":{"title":"Examples and Tutorials","permalink":"/developer-tools/merobox/examples"},"next":{"title":"Real-World Examples","permalink":"/developer-tools/merobox/real-world-examples"}}');var i=n(86070),r=n(83545);const l={title:"Quick Start Tutorials",description:"Step-by-step tutorials to get you started with Merobox quickly.",sidebar_position:4.1},s="Quick Start Tutorials",a={},c=[{value:"Tutorial 1: Your First Merobox Workflow",id:"tutorial-1-your-first-merobox-workflow",level:2},{value:"Step 1: Install Merobox",id:"step-1-install-merobox",level:3},{value:"Step 2: Create a Simple Workflow",id:"step-2-create-a-simple-workflow",level:3},{value:"Step 3: Run the Workflow",id:"step-3-run-the-workflow",level:3},{value:"Step 4: Verify Results",id:"step-4-verify-results",level:3},{value:"Tutorial 2: Application Deployment",id:"tutorial-2-application-deployment",level:2},{value:"Step 1: Prepare Your Application",id:"step-1-prepare-your-application",level:3},{value:"Step 2: Create Deployment Workflow",id:"step-2-create-deployment-workflow",level:3},{value:"Step 3: Run the Deployment",id:"step-3-run-the-deployment",level:3},{value:"Tutorial 3: Multi-Node Setup",id:"tutorial-3-multi-node-setup",level:2},{value:"Step 1: Create Multi-Node Workflow",id:"step-1-create-multi-node-workflow",level:3},{value:"Step 2: Run Multi-Node Workflow",id:"step-2-run-multi-node-workflow",level:3},{value:"Tutorial 4: Authentication Service",id:"tutorial-4-authentication-service",level:2},{value:"Step 1: Create Auth Service Workflow",id:"step-1-create-auth-service-workflow",level:3},{value:"Step 2: Run Auth Service Tutorial",id:"step-2-run-auth-service-tutorial",level:3},{value:"Tutorial 5: Custom Scripts",id:"tutorial-5-custom-scripts",level:2},{value:"Step 1: Create Script Tutorial",id:"step-1-create-script-tutorial",level:3},{value:"Step 2: Run Script Tutorial",id:"step-2-run-script-tutorial",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Issue: Node Not Starting",id:"issue-node-not-starting",level:3},{value:"Issue: Application Installation Fails",id:"issue-application-installation-fails",level:3},{value:"Issue: Context Creation Fails",id:"issue-context-creation-fails",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"quick-start-tutorials",children:"Quick Start Tutorials"})}),"\n",(0,i.jsx)(t.p,{children:"These tutorials will help you get up and running with Merobox quickly, from your\nfirst workflow to deploying applications."}),"\n",(0,i.jsx)(t.h2,{id:"tutorial-1-your-first-merobox-workflow",children:"Tutorial 1: Your First Merobox Workflow"}),"\n",(0,i.jsx)(t.p,{children:"This tutorial walks you through creating and running your first Merobox\nworkflow."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-install-merobox",children:"Step 1: Install Merobox"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"pip install merobox\n"})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-create-a-simple-workflow",children:"Step 2: Create a Simple Workflow"}),"\n",(0,i.jsxs)(t.p,{children:["Create a file called ",(0,i.jsx)(t.code,{children:"my-first-workflow.yml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'description: My first Merobox workflow\nname: First Workflow\n\nnodes:\n  chain_id: testnet-1\n  count: 1\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: calimero-node\n\nsteps:\n  - name: Wait for Node Startup\n    type: wait\n    seconds: 5\n\n  - name: Check Node Health\n    type: script\n    script: |\n      echo "Node is running!"\n      echo "Checking health..."\n\nstop_all_nodes: true\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-3-run-the-workflow",children:"Step 3: Run the Workflow"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"merobox bootstrap run my-first-workflow.yml\n"})}),"\n",(0,i.jsx)(t.h3,{id:"step-4-verify-results",children:"Step 4: Verify Results"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# Check if nodes are running\nmerobox list\n\n# Check node health\nmerobox health\n"})}),"\n",(0,i.jsx)(t.h2,{id:"tutorial-2-application-deployment",children:"Tutorial 2: Application Deployment"}),"\n",(0,i.jsx)(t.p,{children:"Deploy a simple WASM application using Merobox."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-prepare-your-application",children:"Step 1: Prepare Your Application"}),"\n",(0,i.jsx)(t.p,{children:"Create a simple WASM file or use the provided example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# Download example WASM file\ncurl -o kv-store.wasm https://example.com/kv-store.wasm\n"})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-create-deployment-workflow",children:"Step 2: Create Deployment Workflow"}),"\n",(0,i.jsxs)(t.p,{children:["Create ",(0,i.jsx)(t.code,{children:"deploy-app.yml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"description: Deploy and test a WASM application\nname: Application Deployment\n\nnodes:\n  chain_id: testnet-1\n  count: 1\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: calimero-node\n\nsteps:\n  - name: Install Application\n    type: install_application\n    node: calimero-node-1\n    path: ./kv-store.wasm\n    dev: true\n    outputs:\n      app_id: applicationId\n\n  - name: Create Context\n    type: create_context\n    node: calimero-node-1\n    application_id: '{{app_id}}'\n    outputs:\n      context_id: contextId\n      member_key: memberPublicKey\n\n  - name: Test Application\n    type: call\n    node: calimero-node-1\n    context_id: '{{context_id}}'\n    executor_public_key: '{{member_key}}'\n    method: set\n    args:\n      key: hello\n      value: world\n    outputs:\n      set_result: result\n\n  - name: Verify Data\n    type: call\n    node: calimero-node-1\n    context_id: '{{context_id}}'\n    executor_public_key: '{{member_key}}'\n    method: get\n    args:\n      key: hello\n    outputs:\n      get_result: result\n\n  - name: Validate Results\n    type: assert\n    statements:\n      - \"contains({{get_result}}, 'world')\"\n\nstop_all_nodes: true\n"})}),"\n",(0,i.jsx)(t.h3,{id:"step-3-run-the-deployment",children:"Step 3: Run the Deployment"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"merobox bootstrap run deploy-app.yml\n"})}),"\n",(0,i.jsx)(t.h2,{id:"tutorial-3-multi-node-setup",children:"Tutorial 3: Multi-Node Setup"}),"\n",(0,i.jsx)(t.p,{children:"Learn how to set up and work with multiple nodes."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-create-multi-node-workflow",children:"Step 1: Create Multi-Node Workflow"}),"\n",(0,i.jsxs)(t.p,{children:["Create ",(0,i.jsx)(t.code,{children:"multi-node.yml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'description: Multi-node setup tutorial\nname: Multi-Node Tutorial\n\nnodes:\n  chain_id: testnet-1\n  count: 2\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: tutorial-node\n\nsteps:\n  - name: Wait for All Nodes\n    type: wait\n    seconds: 10\n    message: \'Waiting for all nodes to start...\'\n\n  - name: Check Node 1 Health\n    type: script\n    script: |\n      echo "Checking node 1 health..."\n      curl -f http://tutorial-node-1:2428/health || echo "Node 1 not ready yet"\n\n  - name: Check Node 2 Health\n    type: script\n    script: |\n      echo "Checking node 2 health..."\n      curl -f http://tutorial-node-2:2428/health || echo "Node 2 not ready yet"\n\n  - name: List All Nodes\n    type: script\n    script: |\n      echo "All nodes are running:"\n      merobox list\n\nstop_all_nodes: true\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-run-multi-node-workflow",children:"Step 2: Run Multi-Node Workflow"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"merobox bootstrap run multi-node.yml\n"})}),"\n",(0,i.jsx)(t.h2,{id:"tutorial-4-authentication-service",children:"Tutorial 4: Authentication Service"}),"\n",(0,i.jsx)(t.p,{children:"Set up Merobox with authentication service for production-like testing."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-create-auth-service-workflow",children:"Step 1: Create Auth Service Workflow"}),"\n",(0,i.jsxs)(t.p,{children:["Create ",(0,i.jsx)(t.code,{children:"auth-tutorial.yml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'description: Authentication service tutorial\nname: Auth Service Tutorial\n\n# Enable authentication service\nauth_service: true\n\nnodes:\n  chain_id: testnet-1\n  count: 1\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: auth-tutorial\n\nsteps:\n  - name: Wait for Auth Service\n    type: wait\n    seconds: 15\n    message: \'Waiting for authentication service to start...\'\n\n  - name: Check Auth Service\n    type: script\n    script: |\n      echo "Authentication service is running!"\n      echo "Node URL: http://auth-tutorial-1.127.0.0.1.nip.io"\n      echo "Auth Login: http://auth-tutorial-1.127.0.0.1.nip.io/auth/login"\n      echo "Admin Dashboard: http://auth-tutorial-1.127.0.0.1.nip.io/admin-dashboard"\n\nstop_all_nodes: true\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-run-auth-service-tutorial",children:"Step 2: Run Auth Service Tutorial"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"merobox bootstrap run auth-tutorial.yml\n"})}),"\n",(0,i.jsx)(t.h2,{id:"tutorial-5-custom-scripts",children:"Tutorial 5: Custom Scripts"}),"\n",(0,i.jsx)(t.p,{children:"Learn how to use custom scripts in your workflows."}),"\n",(0,i.jsx)(t.h3,{id:"step-1-create-script-tutorial",children:"Step 1: Create Script Tutorial"}),"\n",(0,i.jsxs)(t.p,{children:["Create ",(0,i.jsx)(t.code,{children:"script-tutorial.yml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'description: Custom scripts tutorial\nname: Script Tutorial\n\nnodes:\n  chain_id: testnet-1\n  count: 1\n  image: ghcr.io/calimero-network/merod:edge\n  prefix: script-tutorial\n\nsteps:\n  - name: Pre-Setup Script\n    type: script\n    script: |\n      echo "Setting up test environment..."\n      mkdir -p /tmp/merobox-tutorial\n      echo "Merobox Tutorial" > /tmp/merobox-tutorial/readme.txt\n      echo "Pre-setup complete"\n\n  - name: Main Script\n    type: script\n    script: |\n      echo "Running main tutorial script..."\n      echo "Current directory: $(pwd)"\n      echo "Available files:"\n      ls -la /tmp/merobox-tutorial/\n      echo "Script execution complete"\n\n  - name: Cleanup Script\n    type: script\n    script: |\n      echo "Cleaning up..."\n      rm -rf /tmp/merobox-tutorial\n      echo "Cleanup complete"\n\nstop_all_nodes: true\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-2-run-script-tutorial",children:"Step 2: Run Script Tutorial"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"merobox bootstrap run script-tutorial.yml\n"})}),"\n",(0,i.jsx)(t.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,i.jsx)(t.h3,{id:"issue-node-not-starting",children:"Issue: Node Not Starting"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Problem"}),": Node fails to start or takes too long."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"# Add longer wait times\nsteps:\n  - name: Wait for Node\n    type: wait\n    seconds: 30 # Increase wait time\n    message: 'Waiting for node to start...'\n"})}),"\n",(0,i.jsx)(t.h3,{id:"issue-application-installation-fails",children:"Issue: Application Installation Fails"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Problem"}),": Application installation fails with errors."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"# Use dev mode for local development\nsteps:\n  - name: Install Application\n    type: install_application\n    node: calimero-node-1\n    path: ./my-app.wasm\n    dev: true # Enable dev mode\n"})}),"\n",(0,i.jsx)(t.h3,{id:"issue-context-creation-fails",children:"Issue: Context Creation Fails"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Problem"}),": Context creation fails or times out."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"# Add validation and error handling\nsteps:\n  - name: Create Context\n    type: create_context\n    node: calimero-node-1\n    application_id: '{{app_id}}'\n    outputs:\n      context_id: contextId\n      member_key: memberPublicKey\n\n  - name: Validate Context\n    type: assert\n    statements:\n      - '{{context_id}} != null'\n      - '{{member_key}} != null'\n"})}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(t.p,{children:"Now that you've completed the quick start tutorials:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"./real-world-examples",children:"Real-World Examples"})," - Practical examples for common\nscenarios"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"./testing-integration-examples",children:"Testing Integration Examples"})," - Integration\nwith testing frameworks"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"./advanced-examples",children:"Advanced Examples"})," - Complex workflows and advanced\nfeatures"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"./best-practices",children:"Best Practices"})," - Guidelines for effective Merobox usage"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);